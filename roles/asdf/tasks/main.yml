---
- name: Setup asdf task for OS
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ansible_distribution|lower|replace(' ', '_')}}.yml"
        - "{{ansible_os_platform|lower|replace(' ', '_')}}.yml"
      paths:
        - "vars"

- name: install go deps
  become: true
  when: go_deps is defined and (go_deps|length>0)
  ansible.builtin.package:
    name: "{{ go_deps }}"
    state: present

- name: install ruby deps
  become: true
  when: ruby_deps is defined and (ruby_deps|length>0)
  package:
    name: "{{ ruby_deps }}"
    state: present

- name: install php deps
  become: true
  when: php_deps is defined and (php_deps|length>0)
  package:
    name: "{{ php_deps }}"
    state: present

- name: Download asdf
  get_url:
    url: "https://github.com/asdf-vm/asdf/releases/download/v0.17.0/asdf-v0.17.0-linux-amd64.tar.gz"
    dest: "/tmp/asdf-linux-amd64.tar.gz"

- name: Install asdf
  become: true
  ansible.builtin.shell: |
    tar xf /tmp/asdf-linux-amd64.tar.gz -C /tmp asdf
    mkdir -p /home/jdollar/.asdf/bin
    cp /tmp/asdf /home/jdollar/.asdf/bin/asdf

- name: create zshrc.d directory if it doesn't exist
  ansible.builtin.file:
    path: ~/.config/zsh/zshrc.d
    state: directory

- name: generate plugin file
  ansible.builtin.template:
    src: "{{ role_path }}/files/asdf.j2"
    dest: "{{ zshrc_dir }}/asdf.zsh"
    mode: u=rx

- name: find asdfrc
  find:
    paths: "{{ role_path + '/files' }}"
    patterns:
      - asdfrc
      - tool-versions
    depth: 1
    file_type: any
  register: asdf_role_files

- name: Symlink config
  file:
    src: "{{ item.path }}"
    dest: "~/.{{ item.path.split('/')[-1] }}"
    state: link
  loop: "{{ asdf_role_files.files }}"

- include_tasks:
    file: roles/common/tasks/zsh-file-symlink.yml

- name: install asdf plugins
  shell: "source ~/.zshrc && asdf plugin add {{ item.name }} {{ item.git }}"
  register: result
  failed_when: result.rc != 0 and item.name not in result.stderr and "already added" not in result.stderr
  args:
    executable: /bin/zsh
  loop:
    - { name: "nodejs", git: "https://github.com/asdf-vm/asdf-nodejs.git" }
    - { name: "golang", git: "https://github.com/kennyp/asdf-golang.git" }
    - { name: "ruby", git: "https://github.com/asdf-vm/asdf-ruby.git" }
    - { name: "python", git: "https://github.com/danhper/asdf-python" }
    - { name: "rust", git: "https://github.com/asdf-community/asdf-rust.git" }
    - { name: "php", git: "https://github.com/asdf-community/asdf-php.git" }
    - {
        name: "kubectl",
        git: "https://github.com/asdf-community/asdf-kubectl.git",
      }
    - { name: "helm", git: "https://github.com/Antiarchitect/asdf-helm.git" }
    - { name: "maven", git: "https://github.com/halcyon/asdf-maven" }

- name: install globally defined tool versions
  shell: source ~/.zshrc && asdf install
  args:
    executable: /bin/zsh
