---
- name: Setup asdf task for OS
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ansible_distribution|lower|replace(' ', '_')}}.yml"
        - "{{ansible_os_platform|lower|replace(' ', '_')}}.yml"
      paths:
        - 'vars'

- name: install pre-reqs
  become: true
  when: package_prereq is defined and (package_prereq|length>0)
  ansible.builtin.package:
    name: "{{ package_prereq }}"
    state: present

- name: install neovim
  become: true
  ansible.builtin.package:
    name: "{{ neovim_packages }}"
    state: present

- name: Create config directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - ~/.local/share/nvim/site/pack/packer/start
    - "{{ nvim_config_dir }}/bundle"
    - "{{ nvim_config_dir }}/autoload"

- name: find
  find:
    paths: "{{ role_path + '/files' }}"
    depth: 1
    file_type: any
  register: nvim_role_files

- name: Symlink config
  file:
    src: "{{ item.path }}"
    dest: "{{ nvim_config_dir }}/{{ item.path.split('/')[-1] }}"
    state: link
  loop: "{{ nvim_role_files.files }}"

- name: clean old packer compile
  ansible.builtin.file:
    path: ~/.config/nvim/plugin/packer_compiled.lua
    state: absent

- name: clean old plugins
  shell: nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerClean'

- name: Install plugins
  shell: nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'

